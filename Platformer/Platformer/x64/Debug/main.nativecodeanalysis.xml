<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>core.h</FILENAME>
      <LINE>418</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6285</DEFECTCODE>
    <DESCRIPTION>(&lt;non-zero constant&gt; || &lt;non-zero constant&gt;) is always a non-zero constant.  Did you intend to use the bitwise-and operator?</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::is_utf8</FUNCTION>
    <DECORATED>?is_utf8@detail@v9@fmt@@YA_NXZ</DECORATED>
    <FUNCLINE>415</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1554</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::get_cached_power</FUNCTION>
    <DECORATED>?get_cached_power@detail@v9@fmt@@YA?AU?$basic_fp@_K@123@HAEAH@Z</DECORATED>
    <FUNCLINE>1548</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1554</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::get_cached_power</FUNCTION>
    <DECORATED>?get_cached_power@detail@v9@fmt@@YA?AU?$basic_fp@_K@123@HAEAH@Z</DECORATED>
    <FUNCLINE>1548</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format-inl.h</FILENAME>
      <LINE>1154</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26450</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: '*' operation causes overflow at compile time. Use a wider type to store the operands (io.1).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::dragonbox::remove_trailing_zeros</FUNCTION>
    <DECORATED>?remove_trailing_zeros@dragonbox@detail@v9@fmt@@YAHAEAI@Z</DECORATED>
    <FUNCLINE>1151</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format-inl.h</FILENAME>
      <LINE>1186</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>26450</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: '*' operation causes overflow at compile time. Use a wider type to store the operands (io.1).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::dragonbox::remove_trailing_zeros</FUNCTION>
    <DECORATED>?remove_trailing_zeros@dragonbox@detail@v9@fmt@@YAHAEA_K@Z</DECORATED>
    <FUNCLINE>1173</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format-inl.h</FILENAME>
      <LINE>1207</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26450</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: '*' operation causes overflow at compile time. Use a wider type to store the operands (io.1).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::dragonbox::remove_trailing_zeros</FUNCTION>
    <DECORATED>?remove_trailing_zeros@dragonbox@detail@v9@fmt@@YAHAEA_K@Z</DECORATED>
    <FUNCLINE>1173</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
      <FILENAME>pattern_formatter-inl.h</FILENAME>
      <LINE>1431</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26800</DEFECTCODE>
    <DESCRIPTION>Use of a moved from object: ''user_chars'' (lifetime.1).</DESCRIPTION>
    <FUNCTION>spdlog::pattern_formatter::compile_pattern_</FUNCTION>
    <DECORATED>?compile_pattern_@pattern_formatter@spdlog@@AEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>1390</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1390</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1392</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1392</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1393</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1393</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1394</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1395</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1395</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1395</LINE>
        <COLUMN>39</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1395</LINE>
        <COLUMN>39</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>Branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Branching based on condition 'result.!='. 'true' branch is taken</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1397</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1397</LINE>
        <COLUMN>16</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>Branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Branching based on condition '(int )(result.*) == 37'. 'true' branch is taken</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1399</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1399</LINE>
        <COLUMN>16</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>Branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Branching based on condition 'result.._N'. 'true' branch is taken</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1401</LINE>
        <COLUMN>43</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1401</LINE>
        <COLUMN>47</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>Custom</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Object 'user_chars' is moved.</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1401</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1401</LINE>
        <COLUMN>47</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1404</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1404</LINE>
        <COLUMN>49</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1404</LINE>
        <COLUMN>49</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1404</LINE>
        <COLUMN>43</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1404</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1406</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1406</LINE>
        <COLUMN>19</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>Branch</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>Branching based on condition 'result.!='. 'false' branch is taken</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1419</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\</FILEPATH>
        <FILENAME>pattern_formatter-inl.h</FILENAME>
        <LINE>1431</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\</FILEPATH>
      <FILENAME>Engine.h</FILENAME>
      <LINE>35</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Engine::collisionDetection' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Engine::{ctor}</FUNCTION>
    <DECORATED>??0Engine@@QEAA@XZ</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Engine::collisionDetection</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\</FILEPATH>
      <FILENAME>Engine.h</FILENAME>
      <LINE>35</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Engine::gameLoop' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Engine::{ctor}</FUNCTION>
    <DECORATED>??0Engine@@QEAA@XZ</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Engine::gameLoop</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\</FILEPATH>
      <FILENAME>Engine.h</FILENAME>
      <LINE>35</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Engine::compManager' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Engine::{ctor}</FUNCTION>
    <DECORATED>??0Engine@@QEAA@XZ</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Engine::compManager</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\</FILEPATH>
      <FILENAME>Engine.h</FILENAME>
      <LINE>35</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Engine::soundEngine' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Engine::{ctor}</FUNCTION>
    <DECORATED>??0Engine@@QEAA@XZ</DECORATED>
    <FUNCLINE>35</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Engine::soundEngine</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2768</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'fmt::v9::detail::num_bits&lt;unsigned __int64&gt;' is constexpr, mark variable 'shift' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::bigint::multiply</FUNCTION>
    <DECORATED>??$multiply@Vuint128_fallback@detail@v9@fmt@@$0A@@bigint@detail@v9@fmt@@AEAAXVuint128_fallback@123@@Z</DECORATED>
    <FUNCLINE>2765</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>core.h</FILENAME>
      <LINE>2353</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::parse_nonnegative_int</FUNCTION>
    <DECORATED>??$parse_nonnegative_int@D@detail@v9@fmt@@YAHAEAPEBDPEBDH@Z</DECORATED>
    <FUNCLINE>2336</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>core.h</FILENAME>
      <LINE>721</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26437</DEFECTCODE>
    <DESCRIPTION>Do not slice (es.63).</DESCRIPTION>
    <FUNCTION>fmt::v9::basic_format_parse_context&lt;char,fmt::v9::detail::error_handler&gt;::error_handler</FUNCTION>
    <DECORATED>?error_handler@?$basic_format_parse_context@DUerror_handler@detail@v9@fmt@@@v9@fmt@@QEBA?AU0detail@23@XZ</DECORATED>
    <FUNCLINE>721</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>3252</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'fmt::v9::detail::exponent_mask&lt;float&gt;' is constexpr, mark variable 'mask' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write</FUNCTION>
    <DECORATED>??$write@DVappender@v9@fmt@@M$0A@@detail@v9@fmt@@YA?AVappender@12@V312@M@Z</DECORATED>
    <FUNCLINE>3238</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>3252</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'fmt::v9::detail::exponent_mask&lt;double&gt;' is constexpr, mark variable 'mask' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write</FUNCTION>
    <DECORATED>??$write@DVappender@v9@fmt@@N$0A@@detail@v9@fmt@@YA?AVappender@12@V312@N@Z</DECORATED>
    <FUNCLINE>3238</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>3252</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'fmt::v9::detail::exponent_mask&lt;double&gt;' is constexpr, mark variable 'mask' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write</FUNCTION>
    <DECORATED>??$write@DVappender@v9@fmt@@O$0A@@detail@v9@fmt@@YA?AVappender@12@V312@O@Z</DECORATED>
    <FUNCLINE>3238</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format-inl.h</FILENAME>
      <LINE>1281</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'fmt::v9::detail::num_significand_bits&lt;float&gt;' is constexpr, mark variable 'significand_mask' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::dragonbox::to_decimal</FUNCTION>
    <DECORATED>??$to_decimal@M@dragonbox@detail@v9@fmt@@YA?AU?$decimal_fp@M@0123@M@Z</DECORATED>
    <FUNCLINE>1273</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format-inl.h</FILENAME>
      <LINE>1281</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'fmt::v9::detail::num_significand_bits&lt;double&gt;' is constexpr, mark variable 'significand_mask' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::dragonbox::to_decimal</FUNCTION>
    <DECORATED>??$to_decimal@N@dragonbox@detail@v9@fmt@@YA?AU?$decimal_fp@N@0123@N@Z</DECORATED>
    <FUNCLINE>1273</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>3128</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::format_float</FUNCTION>
    <DECORATED>??$format_float@N@detail@v9@fmt@@YAHNHUfloat_specs@012@AEAV?$buffer@D@012@@Z</DECORATED>
    <FUNCLINE>3098</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>3128</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::format_float</FUNCTION>
    <DECORATED>??$format_float@N@detail@v9@fmt@@YAHNHUfloat_specs@012@AEAV?$buffer@D@012@@Z</DECORATED>
    <FUNCLINE>3098</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2369</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2437</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2369</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2437</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@M@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@M@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2369</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2437</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$fallback_digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2369</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2437</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@U?$decimal_fp@N@dragonbox@detail@23@DV?$digit_grouping@D@623@@detail@v9@fmt@@YA?AVappender@12@V312@AEBU?$decimal_fp@N@dragonbox@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1449</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'fmt::v9::detail::num_significand_bits&lt;double&gt;' is constexpr, mark variable 'offset' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::normalize</FUNCTION>
    <DECORATED>??$normalize@$0A@_K@detail@v9@fmt@@YA?AU?$basic_fp@_K@012@U3012@@Z</DECORATED>
    <FUNCLINE>1440</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1409</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'fmt::v9::detail::num_significand_bits&lt;float&gt;' is constexpr, mark variable 'num_float_significand_bits' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::basic_fp&lt;fmt::v9::detail::uint128_fallback&gt;::assign</FUNCTION>
    <DECORATED>??$assign@M$0A@@?$basic_fp@Vuint128_fallback@detail@v9@fmt@@@detail@v9@fmt@@QEAA_NM@Z</DECORATED>
    <FUNCLINE>1405</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1409</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'fmt::v9::detail::num_significand_bits&lt;double&gt;' is constexpr, mark variable 'num_float_significand_bits' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::basic_fp&lt;fmt::v9::detail::uint128_fallback&gt;::assign</FUNCTION>
    <DECORATED>??$assign@N$0A@@?$basic_fp@Vuint128_fallback@detail@v9@fmt@@@detail@v9@fmt@@QEAA_NN@Z</DECORATED>
    <FUNCLINE>1405</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2369</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@Ubig_decimal_fp@detail@23@DV?$fallback_digit_grouping@D@523@@detail@v9@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2437</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@Ubig_decimal_fp@detail@23@DV?$fallback_digit_grouping@D@523@@detail@v9@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@Ubig_decimal_fp@detail@23@DV?$fallback_digit_grouping@D@523@@detail@v9@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@Ubig_decimal_fp@detail@23@DV?$fallback_digit_grouping@D@523@@detail@v9@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2369</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@Ubig_decimal_fp@detail@23@DV?$digit_grouping@D@523@@detail@v9@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2437</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@Ubig_decimal_fp@detail@23@DV?$digit_grouping@D@523@@detail@v9@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@Ubig_decimal_fp@detail@23@DV?$digit_grouping@D@523@@detail@v9@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2454</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::do_write_float</FUNCTION>
    <DECORATED>??$do_write_float@Vappender@v9@fmt@@Ubig_decimal_fp@detail@23@DV?$digit_grouping@D@523@@detail@v9@fmt@@YA?AVappender@12@V312@AEBUbig_decimal_fp@012@AEBU?$basic_format_specs@D@12@Ufloat_specs@012@Vlocale_ref@012@@Z</DECORATED>
    <FUNCLINE>2361</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1163</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'fmt::v9::detail::thousands_sep_result&lt;char&gt;::thousands_sep' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::thousands_sep_result&lt;char&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$thousands_sep_result@D@detail@v9@fmt@@QEAA@XZ</DECORATED>
    <FUNCLINE>1163</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>fmt::v9::detail::thousands_sep_result&lt;char&gt;::thousands_sep</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1914</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write_int</FUNCTION>
    <DECORATED>??$write_int@Vappender@v9@fmt@@DV&lt;lambda_1&gt;@?4???$write_int@DVappender@v9@fmt@@I@detail@23@YA?AV123@V123@U?$write_int_arg@I@523@AEBU?$basic_format_specs@D@23@Vlocale_ref@523@@Z@@detail@v9@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V&lt;lambda_1&gt;@?4???$write_int@DVappender@v9@fmt@@I@012@YA?AV312@0U?$write_int_arg@I@012@1Vlocale_ref@012@@Z@@Z</DECORATED>
    <FUNCLINE>1908</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1914</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write_int</FUNCTION>
    <DECORATED>??$write_int@Vappender@v9@fmt@@DV&lt;lambda_2&gt;@?8???$write_int@DVappender@v9@fmt@@I@detail@23@YA?AV123@V123@U?$write_int_arg@I@523@AEBU?$basic_format_specs@D@23@Vlocale_ref@523@@Z@@detail@v9@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V&lt;lambda_2&gt;@?8???$write_int@DVappender@v9@fmt@@I@012@YA?AV312@0U?$write_int_arg@I@012@1Vlocale_ref@012@@Z@@Z</DECORATED>
    <FUNCLINE>1908</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1914</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write_int</FUNCTION>
    <DECORATED>??$write_int@Vappender@v9@fmt@@DV&lt;lambda_3&gt;@?M@???$write_int@DVappender@v9@fmt@@I@detail@23@YA?AV123@V123@U?$write_int_arg@I@523@AEBU?$basic_format_specs@D@23@Vlocale_ref@523@@Z@@detail@v9@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V&lt;lambda_3&gt;@?M@???$write_int@DVappender@v9@fmt@@I@012@YA?AV312@0U?$write_int_arg@I@012@1Vlocale_ref@012@@Z@@Z</DECORATED>
    <FUNCLINE>1908</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1914</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write_int</FUNCTION>
    <DECORATED>??$write_int@Vappender@v9@fmt@@DV&lt;lambda_4&gt;@?P@???$write_int@DVappender@v9@fmt@@I@detail@23@YA?AV123@V123@U?$write_int_arg@I@523@AEBU?$basic_format_specs@D@23@Vlocale_ref@523@@Z@@detail@v9@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V&lt;lambda_4&gt;@?P@???$write_int@DVappender@v9@fmt@@I@012@YA?AV312@0U?$write_int_arg@I@012@1Vlocale_ref@012@@Z@@Z</DECORATED>
    <FUNCLINE>1908</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1914</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write_int</FUNCTION>
    <DECORATED>??$write_int@Vappender@v9@fmt@@DV&lt;lambda_1&gt;@?4???$write_int@DVappender@v9@fmt@@_K@detail@23@YA?AV123@V123@U?$write_int_arg@_K@523@AEBU?$basic_format_specs@D@23@Vlocale_ref@523@@Z@@detail@v9@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V&lt;lambda_1&gt;@?4???$write_int@DVappender@v9@fmt@@_K@012@YA?AV312@0U?$write_int_arg@_K@012@1Vlocale_ref@012@@Z@@Z</DECORATED>
    <FUNCLINE>1908</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1914</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write_int</FUNCTION>
    <DECORATED>??$write_int@Vappender@v9@fmt@@DV&lt;lambda_2&gt;@?8???$write_int@DVappender@v9@fmt@@_K@detail@23@YA?AV123@V123@U?$write_int_arg@_K@523@AEBU?$basic_format_specs@D@23@Vlocale_ref@523@@Z@@detail@v9@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V&lt;lambda_2&gt;@?8???$write_int@DVappender@v9@fmt@@_K@012@YA?AV312@0U?$write_int_arg@_K@012@1Vlocale_ref@012@@Z@@Z</DECORATED>
    <FUNCLINE>1908</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1914</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write_int</FUNCTION>
    <DECORATED>??$write_int@Vappender@v9@fmt@@DV&lt;lambda_3&gt;@?M@???$write_int@DVappender@v9@fmt@@_K@detail@23@YA?AV123@V123@U?$write_int_arg@_K@523@AEBU?$basic_format_specs@D@23@Vlocale_ref@523@@Z@@detail@v9@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V&lt;lambda_3&gt;@?M@???$write_int@DVappender@v9@fmt@@_K@012@YA?AV312@0U?$write_int_arg@_K@012@1Vlocale_ref@012@@Z@@Z</DECORATED>
    <FUNCLINE>1908</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1914</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write_int</FUNCTION>
    <DECORATED>??$write_int@Vappender@v9@fmt@@DV&lt;lambda_4&gt;@?P@???$write_int@DVappender@v9@fmt@@_K@detail@23@YA?AV123@V123@U?$write_int_arg@_K@523@AEBU?$basic_format_specs@D@23@Vlocale_ref@523@@Z@@detail@v9@fmt@@YA?AVappender@12@V312@HIAEBU?$basic_format_specs@D@12@V&lt;lambda_4&gt;@?P@???$write_int@DVappender@v9@fmt@@_K@012@YA?AV312@0U?$write_int_arg@_K@012@1Vlocale_ref@012@@Z@@Z</DECORATED>
    <FUNCLINE>1908</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1409</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26498</DEFECTCODE>
    <DESCRIPTION>The function 'fmt::v9::detail::num_significand_bits&lt;double&gt;' is constexpr, mark variable 'num_float_significand_bits' constexpr if compile-time evaluation is desired (con.5).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::basic_fp&lt;unsigned __int64&gt;::assign</FUNCTION>
    <DECORATED>??$assign@N$0A@@?$basic_fp@_K@detail@v9@fmt@@QEAA_NN@Z</DECORATED>
    <FUNCLINE>1405</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1889</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write_int_data&lt;char&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$write_int_data@D@detail@v9@fmt@@QEAA@HIAEBU?$basic_format_specs@D@23@@Z</DECORATED>
    <FUNCLINE>1887</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>1897</LINE>
      <COLUMN>28</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write_int_data&lt;char&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$write_int_data@D@detail@v9@fmt@@QEAA@HIAEBU?$basic_format_specs@D@23@@Z</DECORATED>
    <FUNCLINE>1887</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2300</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write_significand</FUNCTION>
    <DECORATED>??$write_significand@DI$0A@@detail@v9@fmt@@YAPEADPEADIHHD@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Dev\C++\SFML_Games\Platformer\Platformer\Platformer\Vendor\spdlog\include\spdlog\fmt\bundled\</FILEPATH>
      <FILENAME>format.h</FILENAME>
      <LINE>2300</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>fmt::v9::detail::write_significand</FUNCTION>
    <DECORATED>??$write_significand@D_K$0A@@detail@v9@fmt@@YAPEADPEAD_KHHD@Z</DECORATED>
    <FUNCLINE>2296</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>